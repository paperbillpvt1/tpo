# Generated by Django 5.2 on 2025-05-17 15:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('displayName', models.TextField()),
                ('bankName', models.TextField()),
                ('accountNumber', models.TextField()),
                ('accountHolderName', models.TextField()),
                ('ifscCode', models.TextField()),
                ('upiId', models.TextField(blank=True, null=True)),
                ('openingBalance', models.FloatField()),
                ('currentBalance', models.FloatField()),
                ('asOfDate', models.TextField()),
                ('printUpiQrOnInvoices', models.BooleanField(default=False)),
                ('printBankDetailsOnInvoices', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'bank_accounts',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('bankAccountId', models.TextField()),
                ('amount', models.FloatField()),
                ('transactionType', models.TextField()),
                ('transactionDate', models.TextField()),
                ('description', models.TextField()),
                ('referenceNumber', models.TextField(blank=True, null=True)),
                ('relatedEntityId', models.TextField(blank=True, null=True)),
                ('relatedEntityType', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'bank_transactions',
                'ordering': ['-transactionDate'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('firmId', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'categories',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('documentType', models.TextField()),
                ('documentNumber', models.TextField()),
                ('documentDate', models.TextField()),
                ('documentTime', models.TextField(blank=True, null=True)),
                ('partyId', models.TextField(blank=True, null=True)),
                ('partyName', models.TextField()),
                ('phone', models.TextField(blank=True, null=True)),
                ('partyType', models.TextField()),
                ('transactionType', models.TextField()),
                ('status', models.TextField(default='draft')),
                ('ewaybill', models.TextField(blank=True, null=True)),
                ('billingAddress', models.TextField(blank=True, null=True)),
                ('billingName', models.TextField(blank=True, null=True)),
                ('poDate', models.TextField(blank=True, null=True)),
                ('poNumber', models.TextField(blank=True, null=True)),
                ('stateOfSupply', models.TextField(blank=True, null=True)),
                ('roundOff', models.FloatField(default=0)),
                ('total', models.FloatField()),
                ('transportName', models.TextField(blank=True, null=True)),
                ('vehicleNumber', models.TextField(blank=True, null=True)),
                ('deliveryDate', models.TextField(blank=True, null=True)),
                ('deliveryLocation', models.TextField(blank=True, null=True)),
                ('shipping', models.FloatField(blank=True, null=True)),
                ('packaging', models.FloatField(blank=True, null=True)),
                ('adjustment', models.FloatField(blank=True, null=True)),
                ('paymentType', models.TextField()),
                ('bankId', models.TextField(blank=True, null=True)),
                ('chequeNumber', models.TextField(blank=True, null=True)),
                ('chequeDate', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('discountPercentage', models.FloatField(blank=True, null=True)),
                ('discountAmount', models.FloatField(blank=True, null=True)),
                ('taxPercentage', models.FloatField(blank=True, null=True)),
                ('taxAmount', models.FloatField(blank=True, null=True)),
                ('balanceAmount', models.FloatField()),
                ('paidAmount', models.FloatField()),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'documents',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCharge',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('documentId', models.TextField()),
                ('name', models.TextField()),
                ('amount', models.FloatField()),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'document_charges',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='DocumentItem',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('documentId', models.TextField()),
                ('itemId', models.TextField()),
                ('itemName', models.TextField()),
                ('primaryQuantity', models.FloatField()),
                ('secondaryQuantity', models.FloatField(blank=True, null=True)),
                ('primaryUnitId', models.TextField()),
                ('primaryUnitName', models.TextField()),
                ('secondaryUnitId', models.TextField(blank=True, null=True)),
                ('secondaryUnitName', models.TextField(blank=True, null=True)),
                ('unit_conversionId', models.TextField(blank=True, null=True)),
                ('conversionRate', models.FloatField(blank=True, null=True)),
                ('pricePerUnit', models.FloatField()),
                ('amount', models.FloatField()),
                ('mfgDate', models.TextField(blank=True, null=True)),
                ('batchNo', models.TextField(blank=True, null=True)),
                ('expDate', models.TextField(blank=True, null=True)),
                ('taxType', models.TextField(blank=True, null=True)),
                ('taxRate', models.TextField(blank=True, null=True)),
                ('taxAmount', models.FloatField(blank=True, null=True)),
                ('categoryId', models.TextField(blank=True, null=True)),
                ('categoryName', models.TextField(blank=True, null=True)),
                ('itemCode', models.TextField(blank=True, null=True)),
                ('hsnCode', models.TextField(blank=True, null=True)),
                ('serialNo', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('modelNo', models.TextField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('size', models.TextField(blank=True, null=True)),
                ('discountPercent', models.FloatField(blank=True, null=True)),
                ('discountAmount', models.FloatField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'document_items',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='DocumentRelationship',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('sourceDocumentId', models.TextField()),
                ('targetDocumentId', models.TextField()),
                ('relationshipType', models.TextField()),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'document_relationships',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTransportation',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('documentId', models.TextField()),
                ('type', models.TextField()),
                ('detail', models.TextField()),
                ('amount', models.FloatField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'document_transportation',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('country', models.TextField()),
                ('name', models.TextField()),
                ('phone', models.TextField()),
                ('gstNumber', models.TextField(blank=True, null=True)),
                ('ownerName', models.TextField(blank=True, null=True)),
                ('businessName', models.TextField(blank=True, null=True)),
                ('businessLogo', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'firms',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('groupName', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'groups',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('name', models.TextField()),
                ('type', models.TextField()),
                ('hsnCode', models.TextField(blank=True, null=True)),
                ('itemCode', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('imageUrl', models.TextField(blank=True, null=True)),
                ('categoryId', models.TextField(blank=True, null=True)),
                ('unit_conversionId', models.TextField(blank=True, null=True)),
                ('salePrice', models.FloatField()),
                ('salePriceTaxInclusive', models.BooleanField(default=False)),
                ('saleDiscount', models.FloatField(blank=True, null=True)),
                ('saleDiscountType', models.TextField(blank=True, null=True)),
                ('wholesalePrice', models.FloatField(blank=True, null=True)),
                ('purchasePrice', models.FloatField(blank=True, null=True)),
                ('purchasePriceTaxInclusive', models.BooleanField(default=False)),
                ('taxRate', models.TextField(blank=True, null=True)),
                ('primaryQuantity', models.FloatField(blank=True, null=True)),
                ('secondaryQuantity', models.FloatField(blank=True, null=True)),
                ('primaryOpeningQuantity', models.FloatField(blank=True, null=True)),
                ('secondaryOpeningQuantity', models.FloatField(blank=True, null=True)),
                ('pricePerUnit', models.FloatField(blank=True, null=True)),
                ('minStockLevel', models.FloatField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('openingStockDate', models.TextField(blank=True, null=True)),
                ('enableBatchTracking', models.BooleanField(default=False)),
                ('batchNumber', models.TextField(blank=True, null=True)),
                ('expiryDate', models.TextField(blank=True, null=True)),
                ('mfgDate', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('allowNegativeStock', models.BooleanField(default=False)),
                ('isFavorite', models.BooleanField(default=False)),
                ('customFields', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'items',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('name', models.TextField()),
                ('gstNumber', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('groupId', models.TextField(blank=True, null=True)),
                ('gstType', models.TextField()),
                ('state', models.TextField(blank=True, null=True)),
                ('billingAddress', models.TextField(blank=True, null=True)),
                ('shippingAddress', models.TextField(blank=True, null=True)),
                ('shippingEnabled', models.BooleanField(default=False)),
                ('openingBalance', models.FloatField(blank=True, null=True)),
                ('openingBalanceType', models.TextField(blank=True, null=True)),
                ('openingBalanceDate', models.TextField(blank=True, null=True)),
                ('creditLimitType', models.TextField(default='none')),
                ('creditLimitValue', models.FloatField(blank=True, null=True)),
                ('paymentReminderEnabled', models.BooleanField(default=False)),
                ('paymentReminderDays', models.IntegerField(blank=True, null=True)),
                ('loyaltyPointsEnabled', models.BooleanField(default=False)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'parties',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='PartyAdditionalField',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('partyId', models.TextField()),
                ('fieldKey', models.TextField()),
                ('fieldValue', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'party_additional_fields',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('amount', models.FloatField()),
                ('paymentType', models.TextField()),
                ('paymentDate', models.TextField()),
                ('referenceNumber', models.TextField(blank=True, null=True)),
                ('partyId', models.TextField(blank=True, null=True)),
                ('partyName', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('receiptNumber', models.TextField(blank=True, null=True)),
                ('bankAccountId', models.TextField(blank=True, null=True)),
                ('chequeNumber', models.TextField(blank=True, null=True)),
                ('chequeDate', models.TextField(blank=True, null=True)),
                ('imageUrl', models.TextField(blank=True, null=True)),
                ('direction', models.TextField()),
                ('linkedDocumentId', models.TextField(blank=True, null=True)),
                ('linkedDocumentType', models.TextField(blank=True, null=True)),
                ('isReconciled', models.BooleanField(default=False)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-paymentDate'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('itemId', models.TextField()),
                ('documentId', models.TextField()),
                ('documentItemId', models.TextField(blank=True, null=True)),
                ('movementType', models.TextField()),
                ('primaryQuantity', models.FloatField()),
                ('primaryUnitId', models.TextField()),
                ('secondaryQuantity', models.FloatField(blank=True, null=True)),
                ('secondaryUnitId', models.TextField(blank=True, null=True)),
                ('batchNumber', models.TextField(blank=True, null=True)),
                ('expiryDate', models.TextField(blank=True, null=True)),
                ('mfgDate', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'stock_movements',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('fullname', models.TextField()),
                ('shortname', models.TextField()),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'units',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='UnitConversion',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firmId', models.TextField()),
                ('primaryUnitId', models.TextField()),
                ('secondaryUnitId', models.TextField()),
                ('conversionRate', models.FloatField()),
                ('createdAt', models.TextField()),
                ('updatedAt', models.TextField()),
            ],
            options={
                'db_table': 'unit_conversions',
                'ordering': ['-createdAt'],
            },
        ),
    ]
